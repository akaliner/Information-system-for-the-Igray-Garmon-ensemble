// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _1.Data;

#nullable disable

namespace _1.Migrations
{
    [DbContext(typeof(IGDBContext))]
    [Migration("20250413173641_InitialCreate2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("_1.Models.AudApplicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AuditionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuditionId");

                    b.ToTable("AudApplicants");
                });

            modelBuilder.Entity("_1.Models.Audition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AuditionDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Auditions");
                });

            modelBuilder.Entity("_1.Models.AuditionRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AuditionRequests");
                });

            modelBuilder.Entity("_1.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("_1.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("_1.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("RoleId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("_1.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Middlename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("_1.Models.AudApplicant", b =>
                {
                    b.HasOne("_1.Models.Audition", "Audition")
                        .WithMany("Applicants")
                        .HasForeignKey("AuditionId");

                    b.Navigation("Audition");
                });

            modelBuilder.Entity("_1.Models.Audition", b =>
                {
                    b.HasOne("_1.Models.Event", "Event")
                        .WithMany("Auditions")
                        .HasForeignKey("EventId");

                    b.HasOne("_1.Models.Schedule", "Schedule")
                        .WithMany("Auditions")
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Event");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("_1.Models.Schedule", b =>
                {
                    b.HasOne("_1.Models.Event", "Event")
                        .WithMany("Schedules")
                        .HasForeignKey("EventId");

                    b.HasOne("_1.Models.Role", "Role")
                        .WithMany("Schedules")
                        .HasForeignKey("RoleId");

                    b.Navigation("Event");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("_1.Models.User", b =>
                {
                    b.HasOne("_1.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("_1.Models.Audition", b =>
                {
                    b.Navigation("Applicants");
                });

            modelBuilder.Entity("_1.Models.Event", b =>
                {
                    b.Navigation("Auditions");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("_1.Models.Role", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("_1.Models.Schedule", b =>
                {
                    b.Navigation("Auditions");
                });
#pragma warning restore 612, 618
        }
    }
}
