@model IEnumerable<_1.Models.Schedule>
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Расписание";

    var selectedEventId = HttpContextAccessor.HttpContext.Request.Query["eventTypeId"];
    var selectedGroupId = HttpContextAccessor.HttpContext.Request.Query["groupId"];

    // Список уникальных типов событий из Model
    var eventOptions = Model
        .Where(s => s.Event != null)
        .Select(s => new { s.EventId, s.Event.Name })
        .Distinct()
        .ToList();

    var groups = ViewBag.Groups as List<_1.Models.Role>;
}

<h2>Расписание</h2>

<form method="get" class="mb-3">
    <div class="d-flex justify-content-end">
        <div class="mr-2">
            <select name="eventTypeId" class="form-select">
                <option value="">Все типы событий</option>
                @foreach (var evt in eventOptions)
                {
                    var isSelected = selectedEventId == evt.EventId.ToString() ? "selected" : "";
                    @Html.Raw($"<option value=\"{evt.EventId}\" {isSelected}>{evt.Name}</option>")
                }
            </select>
        </div>
        <div class="mr-2">
            <select name="groupId" class="form-select">
                <option value="">Все группы</option>
                @if (groups != null)
                {
                    foreach (var role in groups)
                    {
                        var isSelected = selectedGroupId == role.Id.ToString() ? "selected" : "";
                        @Html.Raw($"<option value=\"{role.Id}\" {isSelected}>{role.Name}</option>")
                    }
                }
            </select>
        </div>
        <div>
            <button type="submit" class="btn btn-primary">Фильтровать</button>
            <!-- <button type="button" class="btn btn-secondary" onclick="resetFilters()">Сбросить</button> -->
        </div>
    </div>
</form>

@if (User.IsInRole("Администратор") || User.IsInRole("Руководитель"))
{
    <div class="d-flex justify-content-end">
        <a class="btn btn-primary ms-auto" asp-action="Create">Добавить запись</a>
    </div>
}

<table class="table">
    <thead>
        <tr>
            <th>Название события</th>
            <th>Тип события</th>
            <th>Группа</th>
            <th>Начало</th>
            <th>Окончание</th>
            <th>Место</th>
            <th>Дополнительно</th>
            @if (User.IsInRole("Администратор") || User.IsInRole("Руководитель"))
            {
                <th>Действия</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.EventName</td>
                <td>@item.Event?.Name</td>
                <td>
                    @foreach (var scheduleRole in item.ScheduleRoles)
                    {
                        <span>@scheduleRole.Role?.Name</span>

                        <br />
                    }
                </td>
                <td>@item.StartTime?.ToString("g")</td>
                <td>@item.EndTime?.ToString("g")</td>
                <td>@item.Location</td>
                <td>@item.AdditionalInfo</td>
                @if (User.IsInRole("Администратор") || User.IsInRole("Руководитель"))
                {
                    <td>
                        <div class="d-flex">
                            <a href="@Url.Action("Edit", "Schedule", new { id = item.Id })" class="btn btn-danger me-2">Изменить</a>
                            <a href="@Url.Action("Delete", "Schedule", new { id = item.Id })" class="btn btn-danger">Удалить</a>
                        </div>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        function resetFilters() {
            document.querySelector('select[name="eventTypeId"]').value = '';
            document.querySelector('select[name="groupId"]').value = '';
            document.querySelector('form').submit();
        }
    </script>
}
